package fi.hut.soberit.agilefant.business.impl;

import java.math.BigInteger;
import java.security.SecureRandom;
import java.util.ArrayList;
import java.util.Collection;

import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.Transaction;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import fi.hut.soberit.agilefant.business.ExportImportBusiness;
import fi.hut.soberit.agilefant.business.IterationBusiness;
import fi.hut.soberit.agilefant.business.UserBusiness;
import fi.hut.soberit.agilefant.business.SettingBusiness;
import fi.hut.soberit.agilefant.business.TeamBusiness;
import fi.hut.soberit.agilefant.db.AgilefantWidgetDAO;
import fi.hut.soberit.agilefant.db.AssignmentDAO;
import fi.hut.soberit.agilefant.db.BacklogHistoryEntryDAO;
import fi.hut.soberit.agilefant.db.BacklogHourEntryDAO;
import fi.hut.soberit.agilefant.db.HolidayDAO;
import fi.hut.soberit.agilefant.db.HourEntryDAO;
import fi.hut.soberit.agilefant.db.IterationDAO;
import fi.hut.soberit.agilefant.db.IterationHistoryEntryDAO;
import fi.hut.soberit.agilefant.db.LabelDAO;
import fi.hut.soberit.agilefant.db.ProductDAO;
import fi.hut.soberit.agilefant.db.ProjectDAO;
import fi.hut.soberit.agilefant.db.SettingDAO;
import fi.hut.soberit.agilefant.db.StoryAccessDAO;
import fi.hut.soberit.agilefant.db.StoryDAO;
import fi.hut.soberit.agilefant.db.StoryHourEntryDAO;
import fi.hut.soberit.agilefant.db.StoryRankDAO;
import fi.hut.soberit.agilefant.db.TaskDAO;
import fi.hut.soberit.agilefant.db.TaskHourEntryDAO;
import fi.hut.soberit.agilefant.db.TeamDAO;
import fi.hut.soberit.agilefant.db.UserDAO;
import fi.hut.soberit.agilefant.db.WhatsNextEntryDAO;
import fi.hut.soberit.agilefant.db.WhatsNextStoryEntryDAO;
import fi.hut.soberit.agilefant.db.WidgetCollectionDAO;
import fi.hut.soberit.agilefant.model.Iteration;
import fi.hut.soberit.agilefant.model.AgilefantWidget;
import fi.hut.soberit.agilefant.model.Project;
import fi.hut.soberit.agilefant.model.Setting;
import fi.hut.soberit.agilefant.model.Story;
import fi.hut.soberit.agilefant.model.Team;
import fi.hut.soberit.agilefant.model.User;
import fi.hut.soberit.agilefant.util.TokenGenerator;

/**
 * Implementation class for export / import service
 * 
 * @author jkorri
 */
@Service("exportBusiness")
public class ExportImportBusinessImpl implements ExportImportBusiness {

	private static final Logger LOG = LoggerFactory.getLogger(ExportImportBusinessImpl.class);	
	
	@Autowired AssignmentDAO assignmentDAO;
	@Autowired BacklogHistoryEntryDAO backlogHistoryEntryDAO;
	@Autowired BacklogHourEntryDAO backlogHourEntryDAO;
	@Autowired HolidayDAO holidayDAO;
	@Autowired HourEntryDAO hourEntryDAO;
	@Autowired IterationDAO iterationDAO;
	@Autowired IterationHistoryEntryDAO iterationHistoryEntryDAO;
	@Autowired LabelDAO labelDAO;
	@Autowired ProductDAO productDAO;
	@Autowired ProjectDAO projectDAO;
	@Autowired SettingDAO settingDAO;
	@Autowired StoryDAO storyDAO;
	@Autowired StoryAccessDAO storyAccessDAO;
	@Autowired StoryHourEntryDAO storyHourEntryDAO;
	@Autowired StoryRankDAO storyRankDAO;
	@Autowired TaskDAO taskDAO;
	@Autowired TaskHourEntryDAO taskHourEntryDAO;
	@Autowired TeamDAO teamDAO;
	@Autowired UserDAO userDAO;
	@Autowired WhatsNextEntryDAO whatsNextEntryDAO;
	@Autowired WhatsNextStoryEntryDAO whatsNextStoryEntryDAO;
	@Autowired WidgetCollectionDAO widgetCollectionDAO;
	@Autowired AgilefantWidgetDAO agilefantWidgetDAO;
	
	@Autowired
	private IterationBusiness iterationBusiness;
	
	@Autowired
	private UserBusiness userBusiness;
	
	@Autowired
	private SettingBusiness settingBusiness;
	
	@Autowired
	private TeamBusiness teamBusiness;
	
	@Autowired
	SessionFactory sessionFactory;
	
    @Autowired
    private TokenGenerator tokenGenerator;

    @Override
    @Transactional(readOnly=true)
    public OrganizationDumpTO exportOrganization() {

        OrganizationDumpTO organizationTO = new OrganizationDumpTO();

        organizationTO.assignments.addAll(this.assignmentDAO.getAll());
        organizationTO.backlogHistoryEntries.addAll(this.backlogHistoryEntryDAO.getAll());
        organizationTO.backlogHourEntries.addAll(this.backlogHourEntryDAO.getAll());
        organizationTO.holidays.addAll(this.holidayDAO.getAll());
        organizationTO.iterations.addAll(this.iterationDAO.getAll());
        organizationTO.iterationHistoryEntries.addAll(this.iterationHistoryEntryDAO.getAll());
        organizationTO.labels.addAll(this.labelDAO.getAll());
        organizationTO.products.addAll(this.productDAO.getAll());
        organizationTO.projects.addAll(this.projectDAO.getAll());
        organizationTO.settings.addAll(this.settingDAO.getAll());

        for(Story story : this.storyDAO.getAll()) {
            this.addInOrder(story, organizationTO.stories);
        }

        organizationTO.storyAccesses.addAll(this.storyAccessDAO.getAll());
        organizationTO.storyHourEntries.addAll(this.storyHourEntryDAO.getAll());
        organizationTO.storyRanks.addAll(this.storyRankDAO.getAll());
        organizationTO.tasks.addAll(this.taskDAO.getAll());
        organizationTO.taskHourEntries.addAll(this.taskHourEntryDAO.getAll());
        organizationTO.teams.addAll(this.teamDAO.getAll());
        organizationTO.users.addAll(this.userDAO.getAll());
        organizationTO.whatsNextEntries.addAll(this.whatsNextEntryDAO.getAll());
        organizationTO.whatsNextStoryEntries.addAll(this.whatsNextStoryEntryDAO.getAll());
        organizationTO.widgetCollections.addAll(this.widgetCollectionDAO.getAll());

        for(AgilefantWidget widget : this.agilefantWidgetDAO.getAll()) {
            AgilefantWidgetAndRef widgetAndRef = this.addWidgetTypeInfo(widget);
            if(widgetAndRef!=null) {
                organizationTO.widgets.add(widgetAndRef);
            }
        }

        return organizationTO;
    }

}
